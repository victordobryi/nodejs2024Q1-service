generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @unique @default(uuid())
  login      String   @unique
  password   String
  version    Int      @default(1)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  userTokens Token?
}

model Token {
  id           String   @id @default(uuid())
  userId       String   @unique
  refreshToken String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Artist {
  id        String     @id @unique @default(uuid())
  name      String
  grammy    Boolean    @default(false)
  tracks    Track[]
  albums    Album[]
  favorites Favorite[]
}

model Track {
  id        String     @id @unique @default(uuid())
  name      String
  artistId  String?    @map("artist_id")
  albumId   String?    @map("album_id")
  duration  Int
  artist    Artist?    @relation(fields: [artistId], references: [id])
  album     Album?     @relation(fields: [albumId], references: [id])
  favorites Favorite[]
}

model Album {
  id        String     @id @unique @default(uuid())
  name      String
  year      Int
  artistId  String?    @map("artist_id")
  artist    Artist?    @relation(fields: [artistId], references: [id])
  tracks    Track[]
  favorites Favorite[]
}

model Favorite {
  id      String   @id @unique @default(uuid())
  tracks  Track[]
  albums  Album[]
  artists Artist[]
}
